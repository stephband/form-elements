{
  "version": 3,
  "sources": ["../../../fn/modules/cache.js", "../../../fn/modules/curry.js", "../../../fn/modules/get.js", "../../../fn/modules/noop.js", "../../../fn/modules/overload.js", "../../../fn/modules/id.js", "../../../dom/modules/assign.js", "../../../dom/modules/create.js", "../../../dom/modules/delegate.js", "../../../fn/modules/is-iterable.js", "../../../fn/modules/arg.js", "../../../fn/modules/self.js", "../../../fn/modules/nothing.js", "../../../fn/modules/to-type.js", "../../../fn/modules/stream/stream.js", "../../../dom/modules/events.js", "../../../dom/modules/trigger.js", "../../../fn/modules/exec.js", "../../../fn/modules/capture.js", "../../../fn/modules/signal.js", "../../../dom/modules/element/renderer.js", "../../../dom/modules/element/internals.js", "../../../fn/modules/clamp.js", "../../../fn/modules/remove.js", "../../../dom/modules/element/token-list-2.js", "../../../dom/modules/element/create-property.js", "../../../dom/modules/element-2.js", "../module.js"],
  "sourcesContent": ["/**\ncache(fn)\nReturns a function that caches the output values of `fn(input)` against input\nvalues in a map, such that for each input value `fn` is only ever called once.\n*/\n\nlet warned;\n\nexport default function cacheByObject(fn) {\n    var map = new Map();\n\n    return function cache(object) {\n        if (window.DEBUG && !warned && object === undefined) {\n            warned = true;\n            console.warn('cache() called with undefined. Not illegal, but potentially bad.');\n        }\n\n        if (window.DEBUG && arguments.length > 1) {\n            console.warn('cache() called with ' + arguments.length + ' arguments. Accepts exactly 1.');\n        }\n\n        if (map.has(object)) {\n            return map.get(object);\n        }\n\n        var value = fn(object);\n        map.set(object, value);\n        return value;\n    };\n}\n", "/**\ncurry(fn [, muteable, arity])\nReturns a function that wraps `fn` and makes it partially applicable.\n*/\n\nimport cache from './cache.js';\n\nconst A     = Array.prototype;\n\nfunction applyFn(fn, args) {\n    return typeof fn === 'function' ? fn.apply(null, args) : fn ;\n}\n\nfunction curry(fn, muteable, arity) {\n    arity = arity || fn.length;\n\n    var memo = arity === 1 ?\n        // Don't cache if `muteable` flag is true\n        muteable ? fn : cache(fn) :\n\n        // It's ok to always cache intermediate memos, though\n        cache(function(object) {\n            return curry(function() {\n                var args = [object];\n                args.push.apply(args, arguments);\n                return fn.apply(null, args);\n            }, muteable, arity - 1) ;\n        }) ;\n\n    return function partial(object) {\n        return arguments.length === 0 ?\n            partial :\n        arguments.length === 1 ?\n            memo(object) :\n        arguments.length >= arity ?\n            fn.apply(null, arguments) :\n        // This is bad, I think. We don't want [[fn],[fn]].map(get(0)) to be firing the fns\n        //arguments.length > arity ?\n        //    applyFn(fn.apply(null, A.splice.call(arguments, 0, arity)), arguments) :\n        applyFn(memo(object), A.slice.call(arguments, 1)) ;\n    };\n}\n\n//function curry(fn, muteable, arity) {\n//    arity = arity || fn.length;\n//    return function curried() {\n//        return arguments.length >= arity ?\n//            fn.apply(null, arguments) :\n//            curried.bind(null, ...arguments) ;\n//    };\n//}\n\nif (window.DEBUG) {\n    const _curry = curry;\n\n    // Feature test\n\tconst isFunctionLengthDefineable = (function() {\n\t\tvar fn = function() {};\n\n\t\ttry {\n\t\t\t// Can't do this on Safari - length non configurable :(\n\t\t\tObject.defineProperty(fn, 'length', { value: 2 });\n\t\t}\n\t\tcatch(e) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn fn.length === 2;\n\t})();\n\n    const setFunctionProperties = function setFunctionProperties(text, parity, fn1, fn2) {\n        // Make the string representation of fn2 display parameters of fn1\n        fn2.toString = function() {\n            return /function\\s*[\\w\\d]*\\s*\\([,\\w\\d\\s]*\\)/.exec(fn1.toString()) + ' { [' + text + '] }';\n        };\n\n        // Where possible, define length so that curried functions show how\n        // many arguments they are yet expecting\n        if (isFunctionLengthDefineable) {\n            Object.defineProperty(fn2, 'length', { value: parity });\n        }\n\n        return fn2;\n    };\n\n    // Make curried functions log a pretty version of their partials\n    curry = function curry(fn, muteable, arity) {\n        arity  = arity || fn.length;\n        return setFunctionProperties('curried', arity, fn, _curry(fn, muteable, arity));\n    };\n}\n\n\nexport default curry;\n", "\n/**\nget(name, object)\nGet property `name` of `object`.\n*/\n\nimport curry from './curry.js';\n\nexport function get(key, object) {\n    // Todo? Support WeakMaps and Maps and other map-like objects with a\n    // get method - but not by detecting the get method\n    return object[key];\n}\n\nexport default curry(get, true);\n", "/**\nnoop()\nDoes nothing, returns undefined.\n**/\n\nexport default function noop() {}\n", "/**\noverload(fn, object)\n\nReturns an overloaded.\n\nTakes a `fn` that returns a string key, and an `object` of key:function\npairs. The returned function calls `fn` with all arguments to get a key,\nthen calls the function at `object[key]` with all arguments.\n\nWhere `fn` returns `undefined`, `object.default` is called if it is defined\nin `object`, otherwise `overload` throws a 'no function defined for key' error.\n\n```\nvar handleEvent = overload(get('type'), {\n    click:   (e) => {...},\n    input:   (e) => {...},\n    default: (e) => {...}\n});\n```\n*/\n\n\nexport default function overload(fn, map) {\n    return function overload() {\n        const key     = fn.apply(this, arguments);\n        const handler = (map[key] || map.default);\n\n        if (!handler) {\n            throw new Error('overload() no function defined for key \"' + key + '\"');\n        }\n\n        return handler.apply(this, arguments);\n    };\n}\n", "/**\nid(value)\nReturns `value`.\n**/\n\nexport default function id(value) { return value; }\n", "/**\nassign(node, properties)\n\nAssigns each property of `properties` to `node`, as a property where that\nproperty exists in `node`, otherwise as an attribute.\n\nIf `properties` has a property `'children'` it must be an array of nodes;\nthey are appended to 'node'.\n\nThe property `'html'` is aliased to `'innerHTML'`. The property `'text'`\nis aliased to `'textContent'`. The property `'tag'` is treated as an alias\nof `'tagName'` (which is ignored, as `node.tagName` is read-only). The\nproperty `'is'` is also ignored.\n*/\n\nimport curry from 'fn/curry.js';\nimport id from 'fn/id.js';\nimport noop from 'fn/noop.js';\nimport overload from 'fn/overload.js';\n\nconst assignProperty = overload(id, {\n\t// Ignore read-only properties or attributes\n\tis: noop,\n\ttag: noop,\n\n\tdata: function(name, node, object) {\n\t\t// Strip undefined\n\t\tfor (name in object) {\n\t\t\tif (object[name] === undefined) {\n\t\t\t\tdelete object[name];\n\t\t\t}\n\t\t}\n\t\t//console.log(Object.assign({}, object));\n\t\tObject.assign(node.dataset, object);\n\t},\n\n\tdataset: function(name, node, object) {\n\t\tObject.assign(node.dataset, object);\n\t},\n\n\thtml: function(name, node, content) {\n\t\tnode.innerHTML = content;\n\t},\n\n\ttext: function(name, node, content) {\n\t\tnode.textContent = content;\n\t},\n\n\tstyle: overload((name, node, content) => typeof content, {\n\t\tstring: (name, node, content) => node.style = content,\n\t\tobject: (name, node, content) => Object.assign(node.style, content)\n\t}),\n\n\tchildren: function(name, node, content) {\n\t\t// Empty the node and append children\n\t\tnode.innerHTML = '';\n\t\tnode.append.apply(node, content);\n\t},\n\n\t// SVG elements have a read-only properties, and must be set as string\n\t// attributes. Todo: explore the SVG property API to make these take\n\t// advantage of it\n\tpoints:    setAttribute,\n    cx:        setAttribute,\n    cy:        setAttribute,\n    r:         setAttribute,\n\tx:         setAttribute,\n\ty:         setAttribute,\n\tdx:        setAttribute,\n\tdy:        setAttribute,\n\ttransform: setAttribute,\n    preserveAspectRatio: setAttribute,\n    viewBox:   setAttribute,\n\n\tdefault: function(name, node, content) {\n\t\tif (name in node) {\n\t\t\tnode[name] = content;\n\t\t}\n\t\telse {\n\t\t\tnode.setAttribute(name, content);\n\t\t}\n\t}\n});\n\nfunction setAttribute(name, node, content) {\n\tnode.setAttribute(name, content);\n}\n\nexport function assign(node, attributes) {\n\tvar names = Object.keys(attributes);\n\tvar n = names.length;\n\n\twhile (n--) {\n\t\tassignProperty(names[n], node, attributes[names[n]]);\n\t}\n\n\treturn node;\n}\n\nexport default curry(assign, true);\n", "\nimport id       from 'fn/id.js';\nimport overload from 'fn/overload.js';\nimport assign   from './assign.js';\n\nconst svgNamespace = 'http://www.w3.org/2000/svg';\n\nconst template      = document.createElement('template');\nconst typeofContent = (type, content) => (content && typeof content);\n\n// Constructors\n\nfunction createContextFragment(context, html = '') {\n    const range = document.createRange();\n    range.selectNode(context);\n    return range.createContextualFragment(html);\n}\n\nconst createSVG = overload(typeofContent, {\n    string: function(tag, html) {\n        const node = document.createElementNS(svgNamespace, tag);\n        node.innerHTML = html;\n        return node;\n    },\n\n    object: function(tag, object) {\n        const node = document.createElementNS(svgNamespace, tag);\n\n        // Is it array-like?\n        if (typeof object.length === 'number') {\n            // Be careful here in case object is a live NodeList, which will\n            // mutate as you iterate over it. Applying object to .append()\n            // appears to not have this problem, and will work on arrays.\n            node.append.apply(node, object);\n        }\n        else {\n            assign(node, object);\n        }\n\n        return node;\n    },\n\n    default: (tag) => document.createElementNS(svgNamespace, tag)\n});\n\nconst createHTML = overload(typeofContent, {\n    string: function(tag, html) {\n        const node = document.createElement(tag);\n        node.innerHTML = html;\n        return node;\n    },\n\n    object: function(tag, object) {\n        const node = document.createElement(tag);\n\n        // Is it array-like?\n        if (typeof object.length === 'number') {\n            // Be careful here in case object is a live NodeList, which will\n            // mutate as you iterate over it. Applying object to .append()\n            // appears to not have this problem, and will work on arrays.\n            node.append.apply(node, object);\n        }\n        else {\n            assign(node, object);\n        }\n\n        return node;\n    },\n\n    default: (tag) => document.createElement(tag)\n});\n\n/**\ncreate(tag, content)\n\nConstructs and returns a new DOM node.\n\n- If `tag` is `\"text\"` a text node is created.\n- If `tag` is `\"fragment\"` a fragment is created.\n- If `tag` is `\"comment\"` a comment is created.\n- If `tag` is any other string the element `<tag></tag>` is created.\n\nWhere a comment or text node is created `content` must be a string, as is set as\ntextContent. For fragments and other nodes:\n\n- If `content` is a string it is set as innerHTML.\n- If `content` is array-like its items are appended to node. Note that where\n`content` is a NodeList, this removes nodes from whatever the NodeList belongs\nto.\n- If `content` is an object its properties are assigned as node properties or\nattributes.\n\n##### `create(tag, content, context)`\n\nWhere `tag` is `fragment` there is an optional third parameter `context`, which\nmust be an element. The fragment parser is run in the context of this element.\n\n```\ncreate('fragment', '<li>', create('ul'));\n```\n**/\n\nconst create = overload(id, {\n    comment: function(tag, text) {\n        return document.createComment(text || '');\n    },\n\n    fragment: overload(typeofContent, {\n        string: function(tag, html, context) {\n            if (context) {\n                return createContextFragment(context, html);\n            }\n\n            template.innerHTML = html;\n            return template.content.cloneNode(true);\n        },\n\n        object: function(tag, object, context) {\n            // If there is context, create a context-aware fragment\n            const fragment = context ?\n                createContextFragment(context) :\n                document.createDocumentFragment() ;\n\n            // Is object array-like?\n            if (typeof object.length === 'number') {\n                // Be careful here in case object is a live NodeList, which will\n                // mutate as you iterate over it. Applying object to .append()\n                // appears to not have this problem, and will work on arrays.\n                fragment.append.apply(fragment, object);\n            }\n            else {\n                assign(fragment, object);\n            }\n\n            return fragment;\n        },\n\n        default: () => document.createDocumentFragment()\n    }),\n\n    /*text: function (tag, text) {\n        return document.createTextNode(text || '');\n    },*/\n\n    circle:   createSVG,\n    ellipse:  createSVG,\n    g:        createSVG,\n    glyph:    createSVG,\n    image:    createSVG,\n    line:     createSVG,\n    rect:     createSVG,\n    use:      createSVG,\n    path:     createSVG,\n    pattern:  createSVG,\n    polygon:  createSVG,\n    polyline: createSVG,\n    svg:      createSVG,\n    tspan:    createSVG,\n    text:     createSVG,\n\n    default:  createHTML\n});\n\nexport default create;\n\n", "\n/**\ndelegate(map)\n\nTakes an object map of functions keyed to selectors, and returns a function that\nhandles event objects, delegating them to the first function whose selector\nmatches the event target. Functions are passed the target node and the event\nobject, plus any other arguments passed to the handler.\n\n```\ndelegate({\n\t'button': (button, event) => {}\n})\n```\n**/\n\nexport default function delegate(object) {\n\tif (typeof object !== 'object' || arguments.length > 1) {\n\t\tthrow new Error('delegate() now takes an object of selector:fn pairs.');\n\t}\n\n\t// Create an event handler that looks up the ancestor tree\n\t// to find selector.\n\treturn function handle(e) {\n\t\tconst target = e.target;\n\t\tlet selector;\n\t\tfor (selector in object) {\n\t\t\tconst node = target.closest(selector);\n\t\t\tif (node) {\n\t\t\t\treturn object[selector](node, ...arguments);\n\t\t\t}\n\t\t}\n\t};\n}\n", "\n/**\nisIterable(value)\n**/\n\nexport default function isIterable(object) {\n    return object && object[Symbol.iterator];\n}\n", "/**\narg(n)\n\nReturns a function that returns `argument[n]`.\n\n```js\n```\n**/\n\nexport default function arg(n) {\n    return function arg() {\n        return arguments[n];\n    };\n}\n", "/**\nself()\nReturns `this`.\n*/\n\nexport default function self() { return this; }\n", "\n/**\nnothing\nA frozen array-like and stream-like object that contains no value.\n**/\n\nimport arg  from './arg.js';\nimport id   from './id.js';\nimport noop from './noop.js';\nimport self from './self.js';\n\nconst create = Object.create;\nconst freeze = Object.freeze;\n\nexport default freeze(create(create(Object.prototype, {\n    // Array methods\n    at:        { value: noop },\n    shift:     { value: noop },\n    push:      { value: noop },\n    forEach:   { value: noop },\n    join:      { value: function() { return ''; } },\n    every:     { value: function() { return true; } },\n    filter:    { value: self },\n    find:      { value: noop },\n    findIndex: { value: function() { return -1; } },\n    flat:      { value: self },\n    flatMap:   { value: self },\n    includes:  { value: function() { return false; } },\n    indexOf:   { value: function() { return -1; } },\n    map:       { value: self },\n    reduce:    { value: arg(1) },\n    sort:      { value: self },\n\n   // Stream methods\n    each:      { value: self },\n    pipe:      { value: id },\n    start:     { value: self },\n    stop:      { value: self },\n    done:      { value: self },\n\n    // Primitive coercion\n    valueOf:   { value: function() { return null; } }\n}), {\n    length: { value: 0 }\n}));\n", "/**\ntoType(object)\nReturns `typeof object`.\n*/\n\nexport default (object) => typeof object;\n", "\nimport isIterable from '../is-iterable.js';\nimport nothing    from '../nothing.js';\nimport noop       from '../noop.js';\nimport overload   from '../overload.js';\nimport toType     from '../to-type.js';\n\nconst assign     = Object.assign;\nconst create     = Object.create;\nconst $listeners = Symbol('done');\n\nconst call = overload(toType, {\n    function: (fn) => fn(),\n    object:   (object) => object.stop()\n});\n\n\n/**\npipe(stream)\nConnect stream to output. Sets up `stream[0]` and `output[-1]` (if output is\n`.stop()`able).\n**/\n\nexport function pipe(stream, output) {\n    // For internal objects `output[-1] === stream` already, but for other\n    // streams it doesn't have a reference to input, so it doesn't participate\n    // in the flow of .stop() unless we give it one. Let's use existence of\n    // .stop() to determine need for output[-1], to avoid us setting\n    // array[-1], for example, in case the consumer is an array.\n    if (output.stop) output[-1] = stream;\n\n    // Add to outputs\n    return stream[0] = output;\n}\n\n\n/*\nunpipe(streams, output)\nInternal, part of the stop cycle. Disconnects output from stream.\n*/\n\nexport function unpipe(stream, output) {\n    let n = -1;\n    let o;\n\n    // Find stream[n] that matches `output`\n    while (stream[++n] && stream[n] !== output);\n\n    if (window.DEBUG && !stream[n]) {\n        throw new Error('Stream: Cannot unpipe(), `output`, not an output of `stream`');\n    }\n\n    // Stop responding to stop() and start() on output\n    output[-1] = undefined;\n\n    // Decrement output n of higher number outputs\n    while (stream[n++]) {\n        stream[n - 1] = stream[n];\n    }\n\n    return output;\n}\n\n\n/**\nstop()\nStops a stream and all downstream streams. This calls the `done` listeners.\n**/\n\nexport function stop(stream) {\n    // Check and set status\n    if (stream.status === 'done') {\n        if (window.DEBUG) {\n            console.log(stream);\n            throw new Error('Stream: cannot stop() stream that is done');\n        }\n        return stream;\n    }\n\n    stream.status = 'done';\n\n    // If stream has not yet been piped, we don't call done() functions\n    // for streams that have not been consumed. The problem with\n    // stream[0] on its own is that it's `false` for an Each stream\n    // or other consumer. The way to identify a consumer is that it\n    // does not have a .pipe().\n    if (stream.pipe && !stream[0]) { return stream; }\n\n    // Call done functions and listeners\n    const listeners = stream[$listeners];\n    stream[$listeners] = undefined;\n\n    if (listeners) {\n        listeners.forEach(call);\n    }\n\n    // Unpiping output 0 decrements other outputs, so this loops through\n    // all outputs, in case it's a broadcast stream. Check it is stoppable,\n    // avoid trying to stop arrays\n    while (stream[0]) {\n        if (Array.isArray(stream[0])) {\n            unpipe(stream, stream[0]);\n        }\n        else {\n            stop(unpipe(stream, stream[0]));\n        }\n    }\n\n    return stream;\n}\n\n\n/**\nStream(pipeable)\nA `pipeable` is an object with `.pipe()` and `.stop()` methods, and optionally\n`.start()`.\n**/\n\n/**\nStream(fn)\nPassing a function to `Stream()` creates a readable stream. The function `fn`\nis called when a consumer is first attached to the stream. It is passed two\narguments, `push()`, used to write to the stream, and `stop()`, used to stop\nthe stream.\n**/\n\nconst readable = {\n    pipe: function(output) {\n        // Connect stream to output\n        pipe(this, output);\n\n        // Call fn(push, stop)\n        this.fn(\n            (value) => Stream.prototype.push.call(this, value),\n            () => this.stop()\n        );\n\n        // Return output stream\n        return output;\n    },\n\n    push: null,\n\n    stop: function() {\n        return this.status === 'done' ?\n            this :\n            stop(this) ;\n    }\n};\n\nexport default function Stream(pipeable) {\n    const type = typeof pipeable;\n\n    if (type === 'object') {\n        // Set pipeable as input\n        this[-1] = pipeable;\n    }\n    else if (type === 'function') {\n        // Store function\n        this.fn = pipeable;\n        // Configure stream as a readonly stream\n        assign(this, readable);\n    }\n    else if (window.DEBUG) {\n        throw new Error('new Stream() may be called with a pipeable object or a function');\n    }\n}\n\nassign(Stream, {\n    /**\n    Stream.broadcast(options)\n    Returns a broadcast stream. Methods called on this stream each\n    create a new stream.\n    **/\n    broadcast: (options) => new Broadcast(nothing, options),\n\n    /* Stream.pipe() Hmmmm... */\n    pipe,\n\n    /* Stream.stop() Hmm... */\n    stop\n});\n\nassign(Stream.prototype, {\n    /**\n    .push(value)\n    Pushes `value` into the stream. If the stream has not been started or is\n    already stopped this will cause an error.\n    **/\n    push: function(value) {\n        // Do we need the guard??\n        return this[0] && this[0].push(value);\n    },\n\n    /**\n    .each(fn)\n    Consume the stream, calling `fn(value)` for each value in it.\n    Returns the stream.\n    **/\n    each: function(fn) {\n        return this.pipe(new Each(this, fn));\n    },\n\n    /**\n    .pipe(stream)\n    Starts a stream and pushes its values into `stream`. Returns `stream`.\n    **/\n    pipe: function(output) {\n        if (window.DEBUG && this[0]) {\n            throw new Error('Stream: cannot .pipe() a unicast stream more than once');\n        }\n\n        if (window.DEBUG && !output.push) {\n            throw new Error('Stream: attempt to .pipe() to non-pushable object');\n        }\n\n        // Connect this to output (sets this[0] and output[-1])\n        pipe(this, output);\n\n        // Tell input to .pipe(), so pipe goes back up the chain\n        this[-1].pipe(this);\n        return output;\n    },\n\n    /**\n    .broadcast(options)\n    Returns a broadcast stream. Methods called on this stream each create new\n    child streams. The first time a consumer is attached to one of these streams\n    the broadcast stream is piped, and the last consumer to be stopped stops the\n    broadcast stream.\n\n    A broadcast stream may have memory, where newly created consumers\n    immediately receive the latest value of the broadcaster when attached\n    (assuming that value is not `undefined`):\n\n    ```js\n    const broadcaster = stream.broadcast({ memory: true });\n    ```\n    **/\n    broadcast: function(options) {\n        return new Broadcast(this, options);\n    },\n\n    /**\n    .filter(fn)\n    Filters out values where `fn(value)` is falsy.\n    **/\n    filter: function(fn) {\n        return new Filter(this, fn);\n    },\n\n    /**\n    .flatMap(fn)\n    **/\n    flatMap: function(fn) {\n        return new FlatMap(this, fn);\n    },\n\n    /**\n    .map(fn)\n    Maps each value in the stream to `fn(value)`. Resulting values that are not\n    `undefined` are pushed downstream.\n    **/\n    map: function(fn) {\n        return new Map(this, fn);\n    },\n\n    /**\n    .reduce(fn, initial)\n    Consume the stream, calling `fn(accumulator, value)` for each value in it.\n    Returns the accumulator.\n    **/\n    reduce: function(fn, accumulator) {\n        return this.pipe(new Reduce(fn, accumulator)).value;\n    },\n\n    /**\n    .scan(fn, initial)\n    Calls `fn(current, value)` for each `value` in the stream. Where `fn`\n    returns a value it is pushed downstream, and `current` assumes that value\n    on the next iteration. Where `fn` returns `undefined` nothing is pushed and\n    `current` remains unchanged.\n    **/\n    scan: function(fn, initial) {\n        return new Scan(this, fn, initial);\n    },\n\n    /**\n    .slice(n, m)\n    Returns a stream of the nth to mth values of stream.\n    **/\n    slice: function(n, m) {\n        return new Slice(this, n, m);\n    },\n\n    /**\n    .split(n)\n    **/\n    split: function(n) {\n        return new Split(this, n);\n    },\n\n    /**\n    .start()\n    Out of the box, `.start()` does nothing. Actually, it errors if a '.start()'\n    is not implemented at the head of the stream. The method is provided as a\n    way to build timed streams. It echoes its arguments to the stream head\n    `.start()`, so the head determines whether `.start()` is supported.\n    **/\n    start: function() {\n        if (this.status === 'done') { return this; }\n        this[-1].start.apply(this[-1], arguments);\n        return this;\n    },\n\n    /**\n    .stop()\n    Stops the stream.\n    **/\n    stop: function() {\n        // Check status\n        if (this.status === 'done') { return this; }\n\n        // Does input have more than 1 output? ie, is it a multicast or\n        // broadcast stream? Don't stop it, unpipe() this from it, and\n        // stop `this`.\n        if (this[-1][1]) {\n            unpipe(this[-1], this);\n            return stop(this);\n        }\n\n        // Otherwise delegate stop() up the chain\n        this[-1].stop.apply(this[-1], arguments);\n        return this;\n    },\n\n    /**\n    .done(fn)\n    Cues `fn` to be called when the stream is stopped.\n    **/\n    done: function(listener) {\n        // Is stream already stopped? Call listener immediately.\n        if (this.status === 'done') {\n            call(listener);\n            return this;\n        }\n\n        const listeners = this[$listeners] || (this[$listeners] = []);\n        listeners.push(listener);\n        return this;\n    },\n\n    /* Experimental async iterator support for `for await (x of stream)`\n       loops. */\n    [Symbol.asyncIterator]: async function*() {\n        // Buffer for synchronous values\n        const values = [];\n        let push = (value) => values.push(value);\n\n        function setResolve(res, rej) {\n            push = res;\n        }\n\n        this\n        .each((value) => push(value))\n        .done(() => push = noop);\n\n        while (push !== noop) {\n            yield values.length ?\n                // Yield collected synchronous value\n                values.shift() :\n                // Yield next asynchronous value\n                await new Promise(setResolve) ;\n        }\n    }\n});\n\n\n/*\nBroadcast(pipeable, options)\nA Broadcast stream may be piped to multiple outputs. The options object has\nthe optional properties:\n\n```js\n{\n    // Remember and send the latest value to newly attached pipes\n    memory: true,\n\n    // Start the stream immediately, and keep it alive after output streams are\n    // removed, allowing you to attach new outputs. This stream can only be\n    // stopped by explicitly calling `.stop()` on it. TODO: is this still true\n    // in Stream v3?\n    hot: true\n}\n```\n*/\n\nexport function Broadcast(pipeable = nothing, options = {}) {\n    //Stream.apply(this, arguments);\n    this[-1] = pipeable;\n\n    // Mark this stream as a memory stream\n    this.memory = !!(options.memory);\n\n    // Open the stream immediately and keep it live even without outputs by\n    // sending output 0 to nothing. It can now only be stopped by explicitly\n    // calling .stop() on it, and not by stopping child streams.\n    if (options.hot) {\n        this.pipe({ push: noop });\n    }\n}\n\nBroadcast.prototype = assign(create(Stream.prototype), {\n    push: function(value) {\n        // Reject undefined\n        if (value === undefined) { return; }\n\n        // If this is a memory stream keep value\n        if (this.memory) {\n            this.value = value;\n        }\n\n        let n = -1;\n        while (this[++n]) {\n            // TODO: should this push cause a child to .stop() and remove\n            // itself... we have a problem...\n            this[n].push(value);\n        }\n    },\n\n    pipe: function(output) {\n        let n = -1;\n        while (this[++n]);\n\n        // If this is a memory stream and this is the first output, flush the\n        // pipe. But we don't have any outputs yet! I know, but the latest value\n        // is remembered and it gets pushed to output below.\n        if (this.memory && n === 0) {\n            this[-1].pipe(this);\n        }\n\n        if (output.stop && output !== nothing) { output[-1] = this; }\n        this[n] = output;\n\n        // If stream has value already, it is a memory stream\n        if (this.value !== undefined) {\n            output.push(this.value);\n        }\n\n        // If not a memory stream and this is the first output start the pipeline\n        if (!this.memory && n === 0) {\n            this[-1].pipe(this);\n        }\n\n        return output;\n    }\n});\n\n\n/* Each() */\n\nfunction Each(input, fn) {\n    this[-1] = input;\n    this.push  = fn;\n}\n\nEach.prototype = assign(create(Stream.prototype), {\n    // Each is a consumer\n    pipe: null\n});\n\n\n/* Filter() */\n\nfunction Filter(input, fn) {\n    this[-1] = input;\n    this.fn    = fn;\n}\n\nFilter.prototype = assign(create(Stream.prototype), {\n    push: function filter(value) {\n        const fn = this.fn;\n        const is = fn(value);\n        is && this[0].push(value);\n    }\n});\n\n\n/* FlatMap() */\n\nfunction FlatMap(input, fn) {\n    this[-1] = input;\n    this.fn    = fn;\n}\n\nFlatMap.prototype = assign(create(Stream.prototype), {\n    push: function flatMap(value) {\n        const fn     = this.fn;\n        const values = fn(value);\n\n        if (values === undefined) { return; }\n\n        // Flatten array or array-like\n        if (isIterable(values)) {\n            for (const value of values) {\n                this[0].push(value);\n            }\n        }\n        // Flatten stream\n        else if (values.pipe) {\n            console.warn('FlatMapping pipeables is dodgy. Map to arrays for the moment please.');\n            // Todo: support flattening of streams. This method is crude -\n            // it does not preserve order, for one thing. Should streams be\n            // made iterable? CAN streams be made iterable? They'd have to\n            // be async...\n            this.done(values.each((value) => this[0].push(value)));\n            // This causes problems if you try\n            // stream.scan(...).flatMap(...)\n            //values.pipe(this[0]);\n        }\n        // Flatten promise\n        else if (values.then) {\n            values.then((value) => this[0].push(value));\n        }\n    }\n});\n\n\n/* Map() */\n\nfunction Map(input, fn) {\n    this[-1] = input;\n    this.fn    = fn;\n}\n\nMap.prototype = assign(create(Stream.prototype), {\n    push: function map(value) {\n        const fn     = this.fn;\n        const result = fn(value);\n        // Reject undefined, return false... why?\n        return result === undefined || !this[0] ?\n            false :\n            this[0].push(result) ;\n    }\n});\n\n\n/* Reduce() */\n\nfunction Reduce(fn, accumulator) {\n    this.fn    = fn;\n    this.value = accumulator;\n    this.i     = 0;\n}\n\nReduce.prototype = assign(create(Stream.prototype), {\n    push: function(value) {\n        const fn = this.fn;\n        this.value = fn(this.value, value, this.i++, this);\n    }\n});\n\n\n/* Scan() */\n\nfunction Scan(input, fn, accumulator) {\n    this[-1] = input;\n    this.fn    = fn;\n    this.value = accumulator;\n}\n\nScan.prototype = assign(create(Stream.prototype), {\n    push: function(value) {\n        const fn = this.fn;\n        this.value = fn(this.value, value);\n        this[0].push(this.value);\n    }\n});\n\n\n/* Slice() */\n\nfunction Slice(input, n, m = Infinity) {\n    if (window.DEBUG && (typeof n !== 'number' || n < 0)) {\n        throw new Error('Stream: .slice() requires a positive integer (' + n + ')');\n    }\n\n    if (window.DEBUG && (typeof m !== 'number' || m < 1)) {\n        throw new Error('Stream: .slice() requires a non-zero positive integer (n, ' + n + ')');\n    }\n\n    this[-1]    = input;\n    this.index    = -n;\n    this.indexEnd = n + m;\n}\n\nSlice.prototype = assign(create(Stream.prototype), {\n    push: function take(value) {\n        if (++this.index > 0) {\n            this[0].push(value);\n        }\n\n        if (this.index === this.indexEnd) {\n            this.stop();\n        }\n    }\n});\n\n\n/* Split(input, fn) */\n\nfunction Split(input, fn) {\n    this[-1] = input;\n    this.chunk = [];\n\n    if (typeof n === 'number') {\n        this.n = fn;\n    }\n    else {\n        this.fn = fn;\n    }\n}\n\nSplit.prototype = assign(create(Stream.prototype), {\n    fn: function() {\n        return this.chunk.length === this.n;\n    },\n\n    push: function map(value) {\n        const chunk = this.chunk;\n\n        if (this.fn(value)) {\n            // Emit complete chunk and create a new chunk\n            this[0].push(chunk);\n            this.chunk = [];\n        }\n        else {\n            // Push to existing chunk\n            chunk.push(value);\n        }\n    }\n});\n", "\n/**\nevents(type, element)\n\nReturns a mappable stream of events heard on `element`.\n\n```js\nevents('click', element)\n.map((e) => e.target.id)\n```\n\nThe first parameter may alternatively be a select object. It must have a\n`.type` property.\n\n```js\nevents({ type: 'click' }, element)\n.map((e) => e.target.id)\n```\n\nThe object may contain a number of other properties that select the events\nreceived. It supports the standard addEventListener options, for passive and\ncapture phase event binding.\n\n```js\nevents({ type: 'scroll', passive: true, capture true }, window)\n.map((e) => window.scrollTop)\n```\n\nAnd a `.select` property, a CSS selector, that filters events to those with\ntargets that match or have a `closest()` ancestor that matches the selector.\n\n```js\nevents({ type: 'click', select: '[name=\"button\"]' }, element)\n.map((e) => e.target.id)\n```\n\nHowever, if you need to delegate events it is recommended to use the\n`delegate()` function, which has the added benefit of direct access to the\ndelegated target.\n\n```js\nevents('click', element)\n.each(delegate({\n    '[name=\"button\"]': (target, e) => console.log(target.id),\n    '[name=\"remove\"]': (target, e) => document.getElementById(target.value).remove(),\n    ...\n}))\n```\n\nStopping an event stream removes its event listeners.\n\n```js\nevents('click', element).stop()\n```\n**/\n\n/*\nevents(type, element, initial)\n\nPass in an `initial` event object to have the event stream start synchronously\nwith an initial value when consumed.\n*/\n\nimport cache from 'fn/cache.js';\nimport Stream, { pipe, stop } from 'fn/stream/stream.js';\n\nconst assign  = Object.assign;\nconst rspaces = /\\s+/;\nconst types   = {\n    fullscreenchange: cache(() => (\n        'fullscreenElement' in document ? 'fullscreenchange' :\n        'webkitFullscreenElement' in document ? 'webkitfullscreenchange' :\n        'mozFullScreenElement' in document ? 'mozfullscreenchange' :\n        'msFullscreenElement' in document ? 'MSFullscreenChange' :\n        'fullscreenchange'\n    ))\n};\n\n\n// DOM click events may be simulated on inputs when their labels are\n// clicked. The tell-tale is they have the same timeStamp. Track click\n// timeStamps.\nvar clickTimeStamp = 0;\n\nwindow.addEventListener('click', (e) => clickTimeStamp = e.timeStamp);\n\nfunction listen(listener, type) {\n    listener.node.addEventListener(types[type] ? types[type]() : type, listener, listener.options);\n    return listener;\n}\n\nfunction unlisten(listener, type) {\n    listener.node.removeEventListener(types[type] ? types[type]() : type, listener);\n    return listener;\n}\n\nfunction EventsProducer(type, options, node, initialEvent) {\n    // Potential hard-to-find error here if type has repeats, ie 'click click'.\n    // Lets assume nobody is dumb enough to do this, I dont want to have to\n    // check for that every time.\n    this.types        = type.split(rspaces);\n    this.options      = options;\n    this.node         = node;\n    this.select       = options && options.select;\n    this.initialEvent = initialEvent;\n}\n\nassign(EventsProducer.prototype, {\n    pipe: function(output) {\n        pipe(this, output);\n        this.types.reduce(listen, this);\n\n        if (this.initialEvent) {\n            this.handleEvent(this.initialEvent);\n            delete this.initialEvent;\n        };\n    },\n\n    handleEvent: function(e) {\n        // Ignore clicks with the same timeStamp as previous clicks –\n        // they are likely simulated by the browser, like how clicks on labels\n        // cause simulated clicks to be emitted from inputs\n        if (e.type === 'click' && e.timeStamp <= clickTimeStamp) {\n            return;\n        }\n\n        // If there is a selector and the target doesn't match, shoofty\n        // outta here\n        if (this.select) {\n            const selectedTarget = e.target.closest(this.select);\n            if (!selectedTarget) { return; }\n            e.selectedTarget = selectedTarget;\n        }\n\n        this[0].push(e);\n    },\n\n    stop: function() {\n        this.types.reduce(unlisten, this);\n        stop(this[0]);\n    }\n});\n\nexport default function events(type, node, initialEvent) {\n    let options;\n\n    if (typeof type === 'object') {\n        options = type;\n        type    = options.type;\n    }\n\n    return new Stream(new EventsProducer(type, options, node, initialEvent));\n}\n", "\n/**\ntrigger(type, node)\n\nTriggers event of `type` on `node`. Returns `false` if the event default was\nprevented, otherwise `true`.\n\n```\ntrigger('activate', node);\n```\n\nAlternatively the first argument may be an object with a `type` property, and\noptionally `detail`, which must be an object, and `bubbles`, `cancelable` and\n`composed` options, which determine the behaviour of the event.\n\n```\ntrigger({\n    type:       'activate',\n    detail:     {...},\n    bubbles:    true,\n    cancelable: true,\n    composed:   false\n}, node);\n```\n**/\n\nimport curry from 'fn/curry.js';\n\nconst assign   = Object.assign;\n\nconst defaults = {\n    // The event bubbles (false by default)\n    // https://developer.mozilla.org/en-US/docs/Web/API/Event/Event\n    bubbles: true,\n\n    // The event may be cancelled (false by default)\n    // https://developer.mozilla.org/en-US/docs/Web/API/Event/Event\n    cancelable: true\n\n    // Trigger listeners outside of a shadow root (false by default)\n    // https://developer.mozilla.org/en-US/docs/Web/API/Event/composed\n    //composed: false\n};\n\nexport function trigger(type, node) {\n    let options = defaults;\n    let properties, detail, bubbles, cancelable, composed, event;\n\n    if (typeof type === 'object') {\n        ({ type, detail, bubbles, cancelable, composed, ...properties } = type);\n\n        // https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\n        // Options accepted by CustomEvent:\n        // detail:     any\n        // bubbles:    true | false\n        // cancelable: true | false\n        // composed:   true | false\n        event = assign(new CustomEvent(type, {\n            detail,\n            bubbles:    bubbles    || defaults.bubbles,\n            cancelable: cancelable || defaults.cancelable,\n            composed:   composed   || defaults.composed\n        }), properties);\n    }\n    else {\n        event = new CustomEvent(type, defaults);\n    }\n\n    return node.dispatchEvent(event);\n}\n\nexport default curry(trigger, true);\n", "\n/**\nexec(regex, fn, string)\nCalls `fn` with the result of `regex.exec(string)` if that result is not null,\nand returns the resulting value.\n**/\n\nimport curry from './curry.js';\n\nexport function exec(regex, fn, string) {\n    let data;\n\n    // If string looks like a regex result, get rest of string\n    // from latest index\n    if (typeof string !== 'string' && string.input !== undefined && string.index !== undefined) {\n        data = string;\n        string = data.input.slice(\n            string.index\n            + string[0].length\n            + (string.consumed || 0)\n        );\n    }\n\n    // Look for tokens\n    const tokens = regex.exec(string);\n    if (!tokens) { return; }\n\n    const output = fn(tokens);\n\n    // If we have a parent tokens object update its consumed count\n    if (data) {\n        data.consumed = (data.consumed || 0)\n            + tokens.index\n            + tokens[0].length\n            + (tokens.consumed || 0) ;\n    }\n\n    return output;\n}\n\nexport default curry(exec, true);\n", "\nimport curry from './curry.js';\nimport { exec } from './exec.js';\n\nfunction error(regex, reducers, string) {\n    if (string.input !== undefined && string.index !== undefined) {\n        string = string.input;\n    }\n\n    throw new Error('Cannot parse string \"' + (string.length > 128 ? string.length.slice(0, 128) + '…' : string) + '\"');\n}\n\nfunction reduce(reducers, acc, tokens) {\n    let n = -1;\n\n    while (++n < tokens.length) {\n        acc = (tokens[n] !== undefined && reducers[n]) ? reducers[n](acc, tokens) : acc ;\n    }\n\n    // Call the optional done fn\n    return reducers.done ? reducers.done(acc, tokens) :\n        // Support the old .close() name\n        reducers.close ? reducers.close(acc, tokens) :\n        // Return the result\n        acc ;\n}\n\n/**\ncapture(regex, reducers, accumulator, string)\nParse `string` with `regex`, calling functions in `reducers` to modify\nand return `accumulator`.\n\nReducers is an object of functions keyed by the index of their capturing\ngroup in the regexp result (`0` corresponding to the entire regex match,\nthe first capturing group being at index `1`). Reducer functions are\ncalled in capture order for all capturing groups that captured something.\nReducers may also define the function 'done', which is called at the end\nof every capture. All reducer functions are passed the paremeters\n`(accumulator, tokens)`, where `tokens` is the regexp result, and are expected\nto return a value that is passed as an accumulator to the next reducer function.\n\nReducers may also define a function `'catch'`, which is called when a match\nhas not been made (where `'catch'` is not defined an error is thrown).\n\n```js\nconst parseValue = capture(/^\\s*(-?\\d*\\.?\\d+)(\\w+)?\\s*$/, {\n    // Create a new accumulator object each call\n    0: () => ({}),\n\n    1: (acc, tokens) => {\n        acc.number = parseFloat(tokens[1]);\n        return acc;\n    },\n\n    2: (acc, tokens) => {\n        acc.unit = tokens[2];\n        return acc;\n    }\n}, null);\n\nconst value = parseValue('36rem');    // { number: 36, unit: 'rem' }\n```\n*/\n\nexport function capture(regex, reducers, acc, string) {\n    const output = exec(regex, (tokens) => reduce(reducers, acc, tokens), string);\n\n    // If tokens is undefined exec has failed to apply regex to string\n    return output === undefined ?\n        // If there is a catch function, call it, otherwise error out\n        reducers.catch ?\n            reducers.catch(acc, string) :\n            error(regex, reducers, string) :\n\n        // Return the accumulator\n        output ;\n}\n\nexport default curry(capture, true);\n", "\nconst DEBUG  = false;//window.DEBUG && window.DEBUG.signal !== false;\nconst assign = Object.assign;\n\nlet evaluatingSignal;\nlet id = 0;\n\nfunction setDependency(signal, dependent) {\n    // Set signal as an input of dependent\n    let n = 0;\n    while (dependent[--n]) if (dependent[n] === signal) break;\n    dependent[n] = signal;\n\n    // Set dependent as an output of signal\n    n = -1;\n    while (signal[++n]) if (signal[n] === dependent) break;\n    signal[n] = dependent;\n\n    if (DEBUG) console.log(\n        '%cSignal%c connect%c ' + signal.constructor.name + '#' + signal.id + ' - ' + dependent.constructor.name + '#' + dependent.id,\n        'color: #718893; font-weight: 300;',\n        'color: #3896BF; font-weight: 300;',\n        'color: #718893; font-weight: 300;'\n    );\n}\n\nfunction invalidateDependents(signal) {\n    if (DEBUG) {\n        console.log(\n            '%cSignal%c invalidate%c ' + signal.constructor.name + '#' + signal.id + (signal.name ? ' \"' + signal.name + '\"' : ''),\n            'color: #718893; font-weight: 300;',\n            'color: #3896BF; font-weight: 300;',\n            'color: #718893; font-weight: 300;'\n        );\n    }\n\n    let n = -1;\n    let dependent;\n    while (dependent = signal[++n]) {\n        signal[n] = undefined;\n        dependent.invalidate(signal);\n    }\n}\n\nexport function hasInput(signal, input) {\n    // Check if input exists in the -ve indexes\n    let n = 0;\n    while (signal[--n]) if (signal[n] === input) return true;\n    return false;\n}\n\n\n/**\nSignal\n\nA signal is an object that represents a value that may change. A signal has\nessentially one property, `.value`. A state signal can have its `.value`\nwritten, a compute signal's `.value` may only be read.\n\nThe `Signal` constructor is not called directly, but calling `Signal.of(value)`\ncreates a state signal, and `Signal.from(fn)` creates a compute signal.\n**/\n\nexport default class Signal {\n    /**\n    Signal.isSignal(object)\n\n    Returns `true` where `object` is an instance of `Signal`.\n\n    This guarantees that `object` has a gettable `value` property. This is not\n    true of an ObserveSignal, which is not really a signal at all – it cannot\n    have dependencies – but is only evaluated as one when invalidated.\n    **/\n\n    static isSignal(object) {\n        return object instanceof Signal;\n    }\n\n    /**\n    Signal.of()\n    Signal.of(value)\n\n    Creates a state signal that has essentially one property, `.value`.\n    When `.value` is set the signal becomes invalid, stale, out of date,\n    irrelevant, historic, old, and any signals that depend on it are invalidated.\n    **/\n\n    static of(value) {\n        return new ValueSignal(value);\n    }\n\n    /**\n    Signal.from(fn)\n    Signal.from(promise)\n    Signal.from(stream)\n\n    Creates a compute signal from a function, where `fn` computes a value by\n    reading other signals' values. This signal is then invalidated when any of\n    the read signals are invalidated.\n\n    Creates a state signal from a promise or stream that invalidates\n    dependencies as the promise or streams' values resolve.\n    **/\n\n    static from(fn, context) {\n        // Promise\n        if (fn.then) {\n            const signal = Signal.of();\n            fn.then((value) => signal.value = value);\n            return signal;\n        }\n\n        // Pipeable\n        if (fn.pipe) {\n            const signal = Signal.of();\n            fn.pipe({ push: (value) => signal.value = value });\n            return signal;\n        }\n\n        // Function\n        return new ComputeSignal(fn, context);\n    }\n\n    static fromProperty(name, object) {\n        // Function\n        return new PropertySignal(name, object);\n    }\n\n    /**\n    Signal.observe(signal, fn, initial)\n\n    Returns an observer that calls `fn` with `signal.value` whenever the signal\n    is invalidated. If `signal` does not have an initial value equal to `initial`\n    `fn` is also called immediately.\n    **/\n\n    static observe(signal, fn, initial) {\n        // Add to signals called on invalidation\n        return new ObserveSignal(signal, fn, initial);\n    }\n\n\n    /**\n    Signal.createPropertyDescriptor(descriptor)\n    Creates a signal-backed get/set property descriptor object from a standard\n    `descriptor` object.\n\n    If `descriptor` has a getter function any signals evaluated by that function\n    invalidate the property when they become invalid. If `descriptor` has `.value`\n    the property is invalidated when a new value is assigned to `object.name`.\n    **/\n\n    static createPropertyDescriptor(descriptor) {\n        const symbol = Symbol();\n\n        return assign({}, descriptor, descriptor.get ? {\n            get: function() {\n                const signal = this[symbol] || (this[symbol] = Signal.from(descriptor.get, this));\n                return signal.value;\n            },\n\n            set: descriptor.set && function(value) {\n                descriptor.set.call(this, value);\n                // We must assume the value has changed here as we don't have\n                // access to the old value ... ?\n                const signal = this[symbol];\n                if (signal) invalidateDependents(signal);\n            }\n        } : {\n            get: function() {\n                const signal = this[symbol] || (this[symbol] = Signal.of(descriptor.value));\n                return signal.value;\n            },\n\n            set: function(value) {\n                const signal = this[symbol] || (this[symbol] = Signal.of(value));\n                signal.value = value;\n            },\n\n            value:    undefined,\n            writable: undefined\n        }) ;\n    }\n\n    /**\n    Signal.define(object, name, descriptor)\n    Apes `Object.defineProperty()` by defining a signal-backed get/set property\n    `object.name` from a `descriptor` object.\n\n    If `descriptor` has a getter function any signals evaluated by that function\n    invalidate the property when they become invalid. If `descriptor` has `.value`\n    the property is invalidated when a new value is assigned to `object.name`.\n    **/\n\n    static define(object, name, descriptor) {\n        return Object.defineProperty(object, name, Signal.createPropertyDescriptor(descriptor)) ;\n    }\n\n    /**\n    Signal.evaluate(signal, fn[, context])\n\n    A function for building objects that behave as compute signals.\n\n    Evaluates `object` as a signal by applying it to `fn` and returning the\n    result. Signals read during `fn()` have `object` registered as a dependent,\n    so `object.invalidate()` is called when any of those signals are invalidated.\n    It's the same function as that used internally to evaluate signals.\n\n    Typically `object.invalidate()` would cue a `Signal.evaluate(object, fn)` at\n    some point in the future. (It is not great to `Signal.evaluate(object, fn)`\n    synchronously inside `.invalidate()`, although this should only lead to\n    wasted invalidations, not bad results. Errm, in most cases, at least.)\n    **/\n\n    static evaluate(signal, fn, context = signal) {\n        // Make signal the evaluating signal for the duration of this\n        // synchronous evaluation of fn()\n        const previous = evaluatingSignal;\n        evaluatingSignal = signal;\n\n        if (DEBUG) console.group(\n            '%cSignal%c evaluate%c ' + evaluatingSignal.constructor.name + '#' + evaluatingSignal.id + (evaluatingSignal.name ? ' \"' + evaluatingSignal.name + '\"' : ''),\n            'color: #718893; font-weight: 300;',\n            'color: #3896BF; font-weight: 300;',\n            'color: #718893; font-weight: 300;'\n        );\n\n        const value = fn.apply(context);\n\n        if (window.DEBUG && window.DEBUG.signal !== false) console.groupEnd();\n\n        evaluatingSignal = previous;\n        return value;\n    }\n\n    /*\n    Signal.evaluating\n    The signal that is currently being evaluated, or undefined. This is exposed\n    so that Data() can make a better call about when to create signals (if there\n    is no evaluating signal, it needn't make a signal when a property is\n    accessed). Deliberately undocumented.\n    */\n\n    static get evaluating() {\n        return evaluatingSignal;\n    }\n\n    constructor(name) {\n        if (name) this.name = name;\n\n        if (DEBUG) {\n            this.id   = ++id;\n            console.log(\n                '%cSignal%c create%c ' + this.constructor.name + '#' + this.id + (this.name ? ' \"' + this.name + '\"' : ''),\n                'color: #718893; font-weight: 300;',\n                'color: #3896BF; font-weight: 300;',\n                'color: #718893; font-weight: 300;'\n            );\n        }\n    }\n\n    /**\n    .valueOf()\n\n    Enables direct use in some expressions like addition or string concatenation.\n    This may prove to be less useful than we think. For one thing, logging a\n    signal object now evaluates it, affecting the outcome.\n    **/\n\n    valueOf() {\n        return this.value;\n    }\n\n    /*\n    .toString()\n    .toJSON()\n\n    Treat `.value` as the value to output?\n    */\n\n    toString() {\n        return this.value + '' ;\n    }\n\n    toJSON() {\n        return this.value;\n    }\n}\n\n\n/*\nValueSignal(value)\n*/\n\nclass ValueSignal extends Signal {\n    #value;\n\n    constructor(value) {\n        super();\n        this.#value = value;\n    }\n\n    /**\n    .value\n\n    Getting `.value` gets value from the cache.\n\n    Setting `.value`, assuming the newly set value differs from the previous\n    value, updates the cache and invalidates dependent signals.\n    **/\n\n    get value() {\n        // If there is a signal currently evaluating then it becomes a\n        // dependency of this signal, irrespective of state of #value\n        if (evaluatingSignal) setDependency(this, evaluatingSignal);\n        return this.#value;\n    }\n\n    set value(value) {\n        // Don't update for no change in value\n        if(this.#value === value) return;\n\n        // Set cached value\n        this.#value = value;\n\n        // Invalidate dependents. If a dependent updates synchronously here\n        // we may be in trouble but #valid is true and #value is set so\n        // that's ok I think?\n        invalidateDependents(this);\n    }\n}\n\n\n/*\nComputeSignal(value)\n*/\n\nclass ComputeSignal extends Signal {\n    // Privates\n    #fn;\n    #context;\n    #valid;\n    #value;\n\n    constructor(fn, context) {\n        super();\n        this.#fn      = fn;\n        this.#context = context;\n    }\n\n    /**\n    .value\n    Getting `.value` gets a cached value or, if the signal is invalid,\n    evaluates (and caches) value from `fn()`. During evaluation this signal is\n    registered as dependent on other signals whose value is got.\n    **/\n\n    get value() {\n        // If there is a signal currently evaluating then it becomes a\n        // dependency of this signal, irrespective of state of #value\n        if (evaluatingSignal) setDependency(this, evaluatingSignal);\n        if (this.#valid) return this.#value;\n        this.#value = Signal.evaluate(this, this.#fn, this.#context);\n        this.#valid = true;\n        return this.#value;\n    }\n\n    /*\n    .invalidate(signal)\n    Invalidates this signal and calls `.invalidate(this)` on all dependent\n    signals. The `signal` parameter is the signal causing the invalidation; it\n    may be `undefined`: where it exists it is verified as a current input of\n    this before this is invalidated.\n    */\n\n    invalidate(signal) {\n        if (!this.#valid) return;\n\n        // Verify that signal has the right to invalidate this to protect us\n        // against the case where a dependent is left on another signal due to\n        // an old evaluation\n        if (signal && !hasInput(this, signal)) return;\n\n        this.#valid = false;\n\n        // Clear inputs\n        let n = 0;\n        while (this[--n]) this[n] = undefined;\n\n        // Invalidate dependents. If a dependent updates synchronously here\n        // we may be in trouble, as it would evaluate and cache this signal\n        // and overwrite dependents before we have finished invalidating\n        // this set of dependents.\n        invalidateDependents(this);\n    }\n}\n\n\n/*\nPropertySignal(value)\n*/\n\nclass PropertySignal extends Signal {\n    // Privates\n    #valid;\n    #value;\n\n    constructor(name, object) {\n        super(name);\n        this.object = object;\n    }\n\n    evaluate() {\n        return this.object[this.name];\n    }\n\n    /**\n    .value\n    Getting `.value` gets a cached value or, if the signal is invalid,\n    evaluates (and caches) value from `fn()`. During evaluation this signal is\n    registered as dependent on other signals whose value is got.\n    **/\n\n    get value() {\n        // If there is a signal currently evaluating then it becomes a\n        // dependency of this signal, irrespective of state of #value\n        if (evaluatingSignal) setDependency(this, evaluatingSignal);\n        if (this.#valid) return this.#value;\n        this.#value = Signal.evaluate(this, this.evaluate, this);\n        this.#valid = true;\n        return this.#value;\n    }\n\n    set value(value) {\n        // Don't update for no change in value.\n        if(this.#value === value) return;\n\n        const { object, name } = this;\n\n        // Set value on object and update value from object in case target is\n        // doing something funky with property descriptors that return a\n        // different value from the value set.\n        object[name] = value;\n        value = object[name];\n\n        // Don't invalidate for no change in value.\n        if(this.#value === value) return;\n\n        // Set cache by reading value back off the object in case object is\n        // doing something funky with property descriptors that return a\n        // different value from the value that was set. Rare, but it can happen.\n        this.#value = value;\n\n        // Invalidate dependents. If a dependent updates synchronously here\n        // we may be in trouble but #valid is true and #value is set so\n        // that's ok I think?\n        invalidateDependents(this);\n    }\n\n    /*\n    .invalidate(signal)\n    Invalidates this signal and calls `.invalidate(this)` on all dependent\n    signals. The `signal` parameter is the signal causing the invalidation; it\n    may be `undefined`: where it exists it is verified as a current input of\n    this before this is invalidated.\n    */\n\n    invalidate(signal) {\n        if (!this.#valid) return;\n\n        // Verify that signal has the right to invalidate this to protect us\n        // against the case where a dependent is left on another signal due to\n        // an old evaluation\n        if (signal && !hasInput(this, signal)) return;\n\n        this.#valid = false;\n\n        // Clear inputs\n        let n = 0;\n        while (this[--n]) this[n] = undefined;\n\n        // Invalidate dependents. If a dependent updates synchronously here\n        // we may be in trouble, as it would evaluate and cache this signal\n        // and overwrite dependents before we have finished invalidating\n        // this set of dependents.\n        invalidateDependents(this);\n    }\n}\n\n\n\n\n\n\n\n\n\n/*\nObserveSignal(fn)\nTEMP: are we sure we are keeping this? Used by Data.observe() and <lieral-html>.\n*/\n\nconst promise = Promise.resolve();\n\nexport class ObserveSignal {\n    #signal;\n    #fn;\n\n    constructor(signal, fn, initial) {\n        this.#signal = signal;\n        this.#fn     = fn;\n\n        // Set up dependency graph, return value\n        const value = Signal.evaluate(this, this.#evaluate);\n\n        // Run the observer if value is not initial\n        if (signal.value !== initial) this.#fn(value);\n    }\n\n    #evaluate() {\n        return this.#signal.value;\n    }\n\n    invalidate(signal) {\n        if (this.status === 'done') return;\n\n        // Verify that signal has the right to invalidate this\n        if (signal && !hasInput(this, signal)) return;\n\n        // Clear inputs\n        let n = 0;\n        while (this[--n]) this[n] = undefined;\n\n        // Evaluate and send value to consumer on next tick\n        promise.then(() => this.#fn(Signal.evaluate(this, this.#evaluate)));\n    }\n\n    stop() {\n        // Check and set status\n        if (this.status === 'done') {\n            if (window.DEBUG) {\n                console.log(this);\n                throw new Error('Stream: cannot stop() stream that is done');\n            }\n\n            return this;\n        }\n\n        this.status = 'done';\n        return this;\n    }\n}\n", "\nimport Signal from 'fn/signal.js';\n\nconst assign    = Object.assign;\nconst renderers = [];\n\n\nfunction frame(time) {\n    let n = -1, renderer;\n    while (renderer = renderers[++n]) Signal.evaluate(renderer, renderer.render);\n    renderers.length = 0;\n}\n\nfunction hasInput(signal, input) {\n    // Check if input exists in the -ve indexes\n    let n = 0;\n    while (signal[--n]) if (signal[n] === input) return true;\n}\n\n\n/**\nRenderer(fn)\nA Renderer is a signal that calls `fn` on construction and again on each\nanimation frame following an invalidation.\n**/\n\nexport default function Renderer(fn) {\n    this.render = fn;\n\n    // An initial, synchronous, evaluation binds this renderer to changes\n    // to signals.\n    Signal.evaluate(this, fn);\n}\n\nassign(Renderer, {\n    from: (fn) => new Renderer(fn)\n});\n\nassign(Renderer.prototype, {\n    invalidate(input) {\n        // Verify that input signal has the right to invalidate this\n        if (input && !hasInput(this, input)) return;\n\n        // If the renderer is already cued do nothing\n        if (renderers.indexOf(this) !== -1) return;\n\n        // Clear inputs\n        let n = 0;\n        while (this[--n]) this[n] = undefined;\n\n        // If no renderers are cued, cue frame() on the next animation frame\n        if (!renderers.length) requestAnimationFrame(frame);\n\n        // Add this renderer to renderers\n        renderers.push(this);\n    },\n\n    stop() {\n        // Remove this from signal graph\n        let n = 0, input;\n        while (input = this[--n]) {\n            let m = -1, output;\n            while (output = input[++m]) if (output === this) break;\n            while (output = input[++m]) input[m - 1] = input[m];\n            input[m] = undefined;\n            this[n]  = undefined;\n        }\n\n        // Remove from renderers if cued\n        const i = renderers.indexOf(this);\n        if (i !== -1) renderers.splice(i, 1);\n\n        return this;\n    }\n});\n", "\n\nimport create from '../create.js';\n\nconst $internals = Symbol('internals');\n\nfunction attachInternals(element) {\n    var internals;\n\n    // Use native attachInternals where it exists\n    if (element.attachInternals) {\n        internals = element.attachInternals();\n        if (internals.setFormValue) {\n            return internals;\n        }\n    }\n    else {\n        internals = {\n            shadowRoot: elem.shadowRoot\n        };\n    }\n\n    // Otherwise polyfill it with a pseudo internals object, actually a hidden\n    // input that we put inside element (but outside the shadow DOM). We may\n    // not yet put this in the DOM however – it violates the spec to give a\n    // custom element children before it's contents are parsed. Instead we\n    // wait until connectCallback.\n    internals.polyfillInput = create('input', { type: 'hidden', name: elem.name });\n    elem.appendChild(internals.polyfillInput);\n\n    // Polyfill internals object setFormValue\n    internals.setFormValue = function(value) {\n        this.input.value = value;\n    };\n\n    return internals;\n}\n\nexport function createInternals(Element, element, shadow) {\n    return (element[$internals] = Element.formAssociated ?\n        attachInternals(element) :\n        { shadowRoot: shadow }\n    );\n}\n\nexport function getInternals(element) {\n    // Default to an empty object\n    return element[$internals];// || (element[$internals] = {});\n}\n", "\n/**\nclamp(min, max, n)\nClamps number `n` to the limits `min` to `max`. Values of `n` lower than `min`\nreturn `min`, and those higher than `max` return `max`.\n**/\n\nimport curry from './curry.js';\n\nexport function clamp(min, max, n) {\n    return n > max ? max : n < min ? min : n;\n}\n\nexport default curry(clamp);\n", "/**\nremove(array, value)\nRemove `value` from `array`. Where `value` is not in `array`, does nothing.\n**/\n\nimport curry from './curry.js';\n\nexport function remove(array, value) {\n    if (array.remove) { array.remove(value); }\n\n    let i;\n    while ((i = array.indexOf(value)) !== -1) {\n        array.splice(i, 1);\n    }\n\n    return array;\n}\n\nexport default curry(remove, true);\n", "\nimport { remove } from 'fn/remove.js';\n\nconst assign = Object.assign;\n\n\n/*\nTokenList(element, definitions)\n\nCreate a TokenList-like object.\n\nThe optional `definitions` object is a map of accepted tokens, each one\nrepresented by an object with the functions `enable()` and `disable()`:\n\n```js\nnew TokenList(element, {\n    token: {\n        enable: function(element) { ... },\n        disable: function(element) { ... }\n    }\n});\n```\n*/\n\nexport default function TokenList(element, definitions) {\n    this.element     = element;\n    this.definitions = definitions;\n    this.tokens      = [];\n}\n\nassign(TokenList.prototype, {\n    contains: function(string) {\n\t\treturn this.tokens.includes(string);\n\t},\n\n    add: function() {\n        let n = arguments.length;\n\n        while (n--) {\n            const token = arguments[n];\n\n            if (!this.tokens.includes(token)) {\n                this.tokens.push(token);\n\n                // Call definition.enable() with element as context\n                if (this.supports(token)) {\n                    this.definitions[token].enable(this.element);\n                }\n            }\n        }\n    },\n\n    remove: function() {\n        let n = arguments.length;\n\n        while (n--) {\n            const token = arguments[n];\n\n            if (this.tokens.includes(token)) {\n                remove(this.tokens, token);\n\n                // Call the definition.disable() with element as context\n                if (this.supports(token)) {\n                    this.definitions[token].disable(this.element);\n                }\n            }\n        }\n    },\n\n    supports: function(token) {\n        return !!this.definitions && !!this.definitions[token];\n    }\n});\n\n\n\n\nconst A      = Array.prototype;\n\n/*\nupdate(list, tokens)\nThe missing update function for TokenLists. Compares existing tokens with\na new list of tokens, removes those that are not in the new list, and adds\nthose that do not exist.\n*/\n\nexport function update(list, tokens) {\n    const removes = list.tokens.slice();\n    const adds    = A.slice.apply(tokens);\n\n    let n = removes.length;\n    while (n--) {\n        if (adds.includes(removes[n])) {\n            removes.splice(n, 1);\n        }\n    }\n\n    list.remove.apply(list, removes);\n    list.add.apply(list, adds);\n}\n", "\nimport clamp     from 'fn/clamp.js';\nimport nothing   from 'fn/nothing.js';\nimport Signal    from 'fn/signal.js';\nimport TokenList, { update } from './token-list-2.js';\n\nexport function createBoolean(name) {\n    const symbol = Symbol(name);\n\n    return {\n        // Use the attribute as the source of truth, so that boolean\n        // attribute/properties behave like their standard counterparts\n        // disabled, hidden, required and so on, where setting the property\n        // adds or removes the attribute\n\n        attribute: function(value) {\n            const signal = this[symbol] || (this[symbol] = Signal.of(value));\n            signal.value = value !== null;\n        },\n\n        get: function() {\n            const signal = this[symbol] || (this[symbol] = Signal.of(false));\n            return signal.value;\n        },\n\n        set: function(value) {\n            if (value) this.setAttribute(name, '');\n            else this.removeAttribute(name);\n        },\n\n        enumerable: true\n    };\n}\n\nexport function createNumber(name, min = -Infinity, max = Infinity, initial = clamp(min, max, 0)) {\n    const symbol = Symbol(name);\n\n    return {\n        attribute: function(value) {\n            this[name] = value;\n        },\n\n        get: function() {\n            const signal = this[symbol] || (this[symbol] = Signal.of(initial));\n            return signal.value;\n        },\n\n        set: function(value) {\n            const signal = this[symbol] || (this[symbol] = Signal.of(value));\n            const number = Number(value);\n\n            if (Number.isNaN(number)) {\n                throw new TypeError('Attempt to set ' + typeof value + ' on ' + name + ' property, expects a number');\n            }\n\n            signal.value = clamp(min, max, number);\n        },\n\n        enumerable: true\n    };\n}\n\nexport function createString(name, pattern) {\n    const symbol = Symbol(name);\n\n    return {\n        attribute: function(value) {\n            this[name] = value === null ? '' : value ;\n        },\n\n        get: function() {\n            const signal = this[symbol] || (this[symbol] = Signal.of(''));\n            return signal.value;\n        },\n\n        set: function(value) {\n            const signal = this[symbol] || (this[symbol] = Signal.of(value));\n            // Where pattern exists check string matches pattern\n            if (pattern && !pattern.test('' + value)) return;\n            signal.value = '' + value;\n        },\n\n        enumerable: true\n    };\n}\n\nexport function createTokenList(name, tokens = nothing) {\n    const symbol = Symbol(name);\n\n    return {\n        // Use the attribute as the source of truth rather than the property,\n        // so that TokenList attribute/properties behave like standard\n        // `classList` and `controls` properties, which update their attributes\n\n        attribute: function(string) {\n            update(this[name], value === null ? '' : value);\n        },\n\n        get: function() {\n            return this[symbol] || (this[symbol] = new TokenList(tokens));\n        },\n\n        set: function(value) {\n            this.setAttribute(name, value);\n        },\n\n        enumerable: true\n    };\n}\n", "\n/**\nelement(tag, lifecycle, properties, stylesheet, message)\n\nRegisters a custom element `tag` and returns its constructor.\n\n- `tag`: A string in the form `'custom-name'`, `'<custom-name>'`,\n`'tag is=\"custom-name\"'` or `'<tag is=\"custom-name\">'`\n- `lifecycle`: `{\n    mode:       'open' or 'closed'\n    focusable:  true or false\n    shadow:     html string or '#template-id' or fragment\n\n    // Styleheet\n    stylesheet: optional string path to stylesheet for shadow DOM\n\n    // Lifecycle handlers\n    construct:  called during element construction\n    connect:    called when element added to DOM\n    load:       called when stylesheet loaded\n    disconnect: called when element removed from DOM\n\n    // Form elements\n    enable:     called when form element enabled\n    disable:    called when form element disabled\n    reset:      called when form element reset\n    restore:    called when form element restored\n}`\n- `properties`: `{\n    name: {\n        construct: fn called before lifecycle.construct\n        attribute: fn called on `element.setAttribute('name', ...)`\n        set:       fn called on setting property 'name'\n        get:       fn called on getting property 'name'\n    }\n}`\n- `stylesheet`: url of a stylesheet to load in to the shadow DOM\n- `message`: optional debug message to logged when element is registered\n\nThe name form `'tag is=\"element-name\"'` creates customised built-in elements in\nbrowsers that support the feature. Safari does not, but support is somewhat\npolyfilled. Mileage will vary.\n\n#### Lifecycle\n\nLifecycle handlers are called with the element as `this` and with the parameters\n`shadow` and `internals`.\n\nOn initialisation the `construct` handler is called. Set up the shadow root and\ndefine event handlers here. Children and attributes must not be inspected or\nassigned at this point: doing so will throw an error when constructed via\n`document.createElement()`.\n\nFollowing that, attribute handlers in `properties` are called for attributes\ndeclared in the HTML. The HTML parser normally calls these in source order.\n\nThen the `connect` handler is called when the element is placed in the DOM, or\nif it is already in the DOM and is being upgraded.\n\nBoth `load` and `slotchange` are asynchronous. Things get a little tricky here.\nThe order of `load` callbacks and `'slotchange'` listeners cannot be guaranteed\nin Safari. When there is an empty cache `slotchange` comes first, as it always\ndoes in other browsers, otherwise `load` happens first.\n\nWhere there is a stylesheet loading, most browsers call `'slotchange'` listeners\n(asynchronously) before `load` – except Safari, where if the stylesheet is\nalready cached `load` is called before `'slotchange'` listeners. (TODO: I would\nlike to guarantee `slotchange` before `load`, but it is not clear how to delay\n`load`... if there is no slotted content, `slotchange` may not be called at\nall...)\n\nFinally, `connect` and `disconnect` are called whenever the element is inserted\ninto or removed from the DOM.\n\nThe effects of the `mode` option are subtle. In 'closed' mode, the element is\nnot given a publicly accessible `shadowRoot` property, and events that traverse\nthe shadow boundary are retargeted (as they are in 'open' mode) but also have\ntheir `path` list truncated.\n\n### Properties\n\nWhere the `properties` object contains a definition for a `value` property, work\nis done to give the element form field behaviour. The constructor is assigned\nthe property `formAssociated` which signals to the browser that it constructs\nform fields. Where they are not defined in `properties` the prototype is\nassigned default handlers for the standard properties `type`, `name`, `form`,\n`labels`, `validity`, `validationMessage`, `willValidate`, `checkValidity`\nand `reportValidity`. Form behaviour is also mildly polyfilled in browsers\nwithout support by inserting a hidden input inside the element but outside the\nshadow DOM. Mileage will vary. Managing focus can be problematic without browser\nsupport.\n*/\n\nimport capture           from 'fn/capture.js';\nimport overload          from 'fn/overload.js';\nimport create            from './create.js';\nimport Renderer          from './element/renderer.js';\n//import toPrefetchPromise from './element/to-prefetch-promise.js';\nimport { createInternals, getInternals } from './element/internals.js';\nimport { createBoolean, createNumber, createString, createTokenList } from './element/create-property.js';\n\n\nconst define         = Object.defineProperties;\nconst nothing        = {};\nconst constructors   = {};\nconst formProperties = {\n    // These properties echo those provided by native form controls. They are\n    // not strictly required, but provided for consistency with standard form\n    // elements.\n\n    //type: { value: 'text' },\n\n    name: {\n        set: function(name) { return this.setAttribute('name', name); },\n        get: function()     { return this.getAttribute('name') || ''; }\n    },\n\n    form:              { get:   function() { return getInternals(this).form; }},\n    labels:            { get:   function() { return getInternals(this).labels; }},\n    validity:          { get:   function() { return getInternals(this).validity; }},\n    validationMessage: { get:   function() { return getInternals(this).validationMessage; }},\n    willValidate:      { get:   function() { return getInternals(this).willValidate; }},\n    checkValidity:     { value: function() { return getInternals(this).checkValidity(); }},\n    reportValidity:    { value: function() { return getInternals(this).reportValidity(); }}\n};\n\n\nlet supportsCustomisedBuiltIn = false;\n\n\n// Capture name and tag from <element-name> or <tag is=\"element-name\">, syntax\n// brackets and quotes optional\nconst parseNameTag = capture(/^\\s*<?([a-z][\\w]*-[\\w-]+)>?\\s*$|^\\s*<?([a-z][\\w]*)\\s+is[=\\s]*[\"']?([a-z][\\w]*-[\\w-]+)[\"']?>?\\s*$/, {\n    1: (data, captures) => ({\n        name: captures[1]\n    }),\n\n    2: (data, captures) => ({\n        name: captures[3],\n        tag:  captures[2]\n    }),\n\n    catch: function(data, name) {\n        throw new SyntaxError('dom element() – name must be of the form \\'element-name\\' or \\'tag is=\"element-name\"\\' (' + name + ')')\n    }\n}, null);\n\nconst onceEvent = { once: true };\n\nfunction toLoadPromise(element) {\n    return new Promise((resolve, reject) => {\n        element.addEventListener('load', resolve, onceEvent);\n        element.addEventListener('error', reject, onceEvent);\n    });\n}\n\nfunction stop(object) {\n    object.stop();\n}\n\nfunction getElementConstructor(tag) {\n    if (constructors[tag]) return constructors[tag];\n\n    const constructor = document.createElement(tag).constructor;\n    if (constructor === HTMLUnknownElement) {\n        throw new Error('Cannot define customised built-in - constructor for <' + tag + '> is HTMLUnknownElement');\n    }\n\n    return constructors[tag] = constructor;\n}\n\nfunction transferProperty(element, key) {\n    if (element.hasOwnProperty(key)) {\n        const value = element[key];\n        delete element[key];\n        element[key] = value;\n    }\n    return element;\n}\n\nfunction createShadow(elem, options) {\n    // Create a shadow root. Shadows may be 'open' or 'closed'. Closed shadows\n    // are not exposed via element.shadowRoot, and events propagating from\n    // inside of them report the element as target. Default to 'closed'.\n    const shadow = elem.attachShadow({\n        mode:           options.mode || 'closed',\n        delegatesFocus: options.focusable || false\n    });\n\n    if (options.stylesheet) {\n        const link = create('link', { rel: 'stylesheet', href: options.stylesheet });\n        shadow.append(link);\n    }\n\n    return shadow;\n}\n\nfunction fillShadowFromTemplate(shadow, template) {\n    // It's a string\n    if (typeof template === 'string') {\n        // It's an id of a template\n        if (template[0] === '#') {\n            shadow.appendChild(\n                document.getElementById(template.slice(1))\n                .content.clone(true)\n            );\n        }\n        // It's html\n        else {\n            shadow.innerHTML = template;\n        }\n    }\n    // It's a <template>\n    else {\n        shadow.appendChild(template.content.clone(true));\n    }\n\n    return shadow;\n}\n\nconst createDescriptor = overload((name, options) => typeof options, {\n    object: overload((name, options) => options.type, {\n        boolean: (name, options) => createBoolean(name),\n        number:  (name, options) => createNumber(name, options.min, options.max, options.default),\n        string:  (name, options) => createString(name, options.pattern),\n        tokens:  (name, options) => createTokenList(name, options.tokens),\n        default: (name, options) => options\n    }),\n    function: (name, fn) => ({ value: fn }),\n    string:   (name, type) => createDescriptor(name, { type }),\n    default:  (name, options) => {\n        throw new TypeError('element() does not accept property descriptor of type ' + typeof options);\n    }\n});\n\nexport default function element(definition, lifecycle = {}, properties = {}, log = '') {\n    const { name, tag } = parseNameTag(definition);\n\n    // Get the element constructor or the base HTMLElement constructor\n    const constructor = typeof tag === 'string' ?\n        getElementConstructor(tag) :\n        HTMLElement ;\n\n    // Split properties into attributes and property descriptors\n    const attributes  = [];\n    const descriptors = {};\n\n    let propname, descriptor;\n    for (propname in properties) {\n        descriptor = createDescriptor(propname, properties[propname]);\n\n        // Add name to list of observed attributes\n        if (descriptor.attribute) attributes.push(propname);\n\n        // Add descriptor to properties to be defined\n        if (descriptor.set || descriptor.get || 'value' in descriptor) descriptors[propname] = descriptor;\n\n        // Override property descriptor\n        properties[propname] = descriptor;\n    }\n\n    // Declare constructor\n    function Element() {\n        // Construct an instance from Constructor using Element prototype\n        const element = Reflect.construct(constructor, arguments, Element);\n\n        // Make shadow if mode or shadow have been set\n        const shadow = lifecycle.mode || (typeof lifecycle.shadow === 'string') ?\n            createShadow(element, lifecycle) :\n            undefined ;\n\n        // Fill shadow with template\n        if (lifecycle.shadow) fillShadowFromTemplate(shadow, lifecycle.shadow);\n\n        // Get access to the internals object. If form associated, internals is\n        // the form control API internals object. We're gonna be rude and\n        // extend it.\n        const internals = createInternals(Element, element, shadow);\n        const params    = internals.params = [shadow, internals];\n\n        // Flag support for custom built-ins. We know this when tag exists and\n        // Element constructor is called\n        if (tag) supportsCustomisedBuiltIn = true;\n\n        if (lifecycle.construct) lifecycle.construct.apply(element, params);\n\n        // At this point, if properties have been set before the element was\n        // upgraded they already exist on the element itself, where we have\n        // just upgraded it's protytype to define those properties. Those\n        // definitions will never be reached. Either:\n        //\n        // 1. Define properties on the instance instead of the prototype, as in\n        //    Object.defineProperties(element, properties);\n        //\n        // 2. Take a great deal of care when authoring not to set properties\n        //    before an element is upgraded. We can't impose a restriction like that.\n        //\n        // 3. Copy defined properties to their prototype handlers and delete\n        //    them on the instance.\n        //\n        // Let's go with 3. I'm not happy we have to do this, though.\n        if (properties) {\n            Object.keys(properties).reduce(transferProperty, element);\n        }\n\n        // Avoid flash of unstyled content in shadow DOMs that must load assets.\n        if (shadow) {\n            const links = shadow.querySelectorAll('link[rel=\"stylesheet\"]');\n\n            if (links.length) {\n                // Hide all content other than the default slot until stylesheets\n                // have loaded. We keep the default slot visible as that content\n                // was visible before upgrade and we do not want it to momentarily\n                // disappear.\n                const style = create('style', '*:not(slot), slot:not([name]) { display: none !important; }');\n                shadow.prepend(style);\n\n                const promise = Promise\n                .all(Array.from(links, toLoadPromise))\n                .finally(() => {\n                    style.remove();\n                    if (lifecycle.load) lifecycle.load.apply(this, internals.params);\n                });\n            }\n        }\n\n        return element;\n    }\n\n    // Set prototype and define properties\n    Element.prototype = Object.create(constructor.prototype, descriptors);\n\n    // Prefetch stylesheet ??\n    /*if (stylesheet) {\n        toPrefetchPromise(stylesheet);\n        log = window.DEBUG ?\n            log + ' – stylesheet ' + stylesheet :\n            log ;\n    }*/\n\n    if (properties.value) {\n        // Flag the Element class as formAssociated\n        Element.formAssociated = true;\n\n        // Define standard form properties\n        define(Element.prototype, formProperties);\n\n        if (lifecycle.enable || lifecycle.disable) {\n            Element.prototype.formDisabledCallback = function(disabled) {\n                const internals = getInternals(this);\n                return disabled ?\n                    lifecycle.disable && lifecycle.disable.apply(this, internals.params) :\n                    lifecycle.enable && lifecycle.enable.apply(this, internals.params) ;\n            };\n        }\n\n        if (lifecycle.reset) {\n            Element.prototype.formResetCallback = function() {\n                const internals = getInternals(this);\n                return lifecycle.reset.apply(this, internals.params);\n            };\n        }\n\n        if (lifecycle.restore) {\n            Element.prototype.formStateRestoreCallback = function() {\n                const internals = getInternals(this);\n                const params    = internals.params;\n                return lifecycle.restore.apply(this, internals.params);\n            };\n        }\n    }\n\n    // Attributes\n    if (attributes.length) {\n        Element.observedAttributes = attributes;\n        Element.prototype.attributeChangedCallback = function(name, old, value) {\n            return properties[name].attribute.call(this, value) ;\n        };\n    }\n\n    // Lifecycle\n    if (lifecycle.connect) {\n        Element.prototype.connectedCallback = function() {\n            const internals = getInternals(this);\n            lifecycle.connect.apply(this, internals.params);\n        }\n    }\n\n    if (lifecycle.disconnect) {\n        Element.prototype.disconnectedCallback = function() {\n            const internals = getInternals(this);\n            lifecycle.disconnect.apply(this, internals.params);\n        };\n    }\n\n    // Log registration to console\n    window.console &&\n    window.console.log('%c<' + (tag ? tag + ' is=' + name + '' : name) + '>%c ' + log, 'color:#3a8ab0;font-weight:600;', 'color:#888888;font-weight:400;');\n\n    // Define the element\n    window.customElements.define(name, Element, tag && { extends: tag });\n\n    // Safari partial polyfill.\n    // Where tag is supplied, element should have been registered as a customised\n    // built-in and the constructor would have run if any were in the DOM already.\n    // However, Safari does not support customised built-ins. Here we attempt to\n    // go some way towards filling in support by searching for elements and\n    // assigning their intended APIs to them.\n    if (tag && !supportsCustomisedBuiltIn) {\n        if (window.DEBUG) {\n            console.warn('Browser does not support customised built-in elements, polyfilling <' + tag + ' is=\"' + name + '\">');\n        }\n\n        document.querySelectorAll('[is=\"' + name + '\"]').forEach((element) => {\n            // Define properties on element\n            if (properties) {\n                define(element, properties);\n            }\n\n            // Construct an instance from Constructor using the Element prototype\n            const shadow = lifecycle.mode || lifecycle.shadow ?\n                createShadow(element, lifecycle) :\n                undefined ;\n\n            // Get access to the internals object\n            const internals = createInternals(Element, element, shadow);\n\n            // Run constructor\n            lifecycle.construct && lifecycle.construct.call(element, shadow, internals);\n\n            // Detect and run attributes\n            let n = -1, name;\n            while (name = attributes[++n]) {\n                // elements.attributes is sometimes undefined... why?\n                const attribute = element.attributes[name];\n                if (attribute) {\n                    properties[name].attribute.call(element, attribute.value);\n                }\n            }\n\n            // Run connected callback\n            lifecycle.connect && lifecycle.connect.call(element, shadow, internals);\n        });\n    }\n\n    return Element;\n}\n\nexport { getInternals };\nexport const render = Renderer.from;\n", "/**\n<file-menu>\n\nA select menu for saving data to localStorage.\n\n## Import\n\nImport and register the `<file-menu>` custom element, upgrading any\ninstances already in the DOM:\n\n```js\nimport RangeInput from './build/file-menu.js';\n```\n\n## Use\n\nYou can now author `<file-menu>` elements in your HTML. By default the\nelement shows a menu of all data contained in localStorage:\n\n```html\n<file-menu></file-menu>\n```\n\nThe `prefix` attribute makes `<file-menu>` show only data whose `localStorage`\nkey begins with the given prefix:\n\n```html\n<file-menu prefix=\"setting/\"></file-menu>\n```\n\nThe title attribute is reflected as the name of the default option:\n\n```html\n<file-menu prefix=\"setting/\" title=\"Settings\"></file-menu>\n```\n\nWhen an item in the menu is selected `<file-menu>` emits a `\"change\"` event,\nits `.value` property is the (unprefixed) key and its `.data` property is the\ncorresponding data read from localStorage and parsed as JSON.\n**/\n\n\nimport get      from 'fn/get.js';\nimport noop     from 'fn/noop.js';\nimport overload from 'fn/overload.js';\nimport create   from 'dom/create.js';\nimport delegate from 'dom/delegate.js';\nimport events   from 'dom/events.js';\nimport trigger  from 'dom/trigger.js';\nimport element, { render }  from 'dom/element-2.js';\n\n//const stylesheet = new URL('./shadow.css', import.meta.url);\nconst stylesheet = import.meta.url.replace(/js$/, 'css');\nconst isTopWindow = (() => {\n    // Test that we are not running in an iframe\n    try { return window.self === window.top; }\n    catch(e) { return false; }\n})();\n\nfunction stop(object) {\n    object.stop();\n}\n\nfunction downloadAs(filename, data) {\n    // Create blob from json\n    const blob = new Blob([JSON.stringify(data, null, 2)], { type: \"application/json\" });\n\n    // Create the blob URL\n    const url = URL.createObjectURL(blob);\n\n    // Create the `<a download>` element and append it invisibly.\n    const a = document.createElement('a');\n    a.href     = url;\n    a.download = filename;\n    a.hidden   = true;\n    document.body.append(a);\n\n    // Programmatically click the element.\n    a.click();\n\n    // Revoke the blob URL and remove the element.\n    setTimeout(() => {\n        URL.revokeObjectURL(url);\n        a.remove();\n    }, 1000);\n}\n\nasync function saveAs(filename, data, id) {\n    // create a new handle\n    const file = await window.showSaveFilePicker({ id, suggestedName: filename });\n    // create a FileSystemWritableFileStream to write to\n    const writable = await file.createWritable();\n    // write to file\n    await writable.write(JSON.stringify(data, null, 2));\n    // close the file and write the contents to disk.\n    await writable.close();\n}\n\nexport default element('<file-menu>', {\n    shadow: `\n        <link rel=\"stylesheet\" href=\"${ stylesheet }\"/>\n\n        <select name=\"setting\">\n            <option value selected disabled id=\"default-option\">Settings</option>\n            <hr id=\"marker\"/>\n            <hr/>\n            <option value=\"$store\">Store</option>\n            <option value=\"$store-as\">Store As</option>\n            <option value=\"$delete\">Delete</option>\n            <hr/>\n            <option value=\"$save-as\">Save as</option>\n        </select>\n\n        <svg viewbox=\"0 0 24 24\">\n            <path d=\"M7,10 L17,10 L12,15 Z\"/>\n        </svg>\n\n        <dialog>\n            <form style=\"width: 320px; margin: 1.875rem auto;\" method=\"dialog\">\n                <label>Save as</label>\n                <input type=\"text\" name=\"name\" placeholder=\"Name\" id=\"name\" />\n                <button name=\"cancel\">Close</button>\n                <button type=\"submit\" name=\"save\">Save</button>\n            </form>\n        </dialog>\n    `,\n\n    construct: function(shadow, internals, data) {\n        const select = shadow.querySelector('select');\n        const dialog = shadow.querySelector('dialog');\n        const marker = shadow.getElementById('marker');\n\n        events('change', shadow).each(delegate({\n            '[name=\"setting\"]': overload(get('value'), {\n                '': noop,\n\n                '$store': (select, e) => {\n                    // If there is no current name open the Store As dialog\n                    if (!internals.filename) return dialog.showModal();\n                    // Compose name\n                    const key = this.prefix + internals.filename;\n                    // Save under the current name\n                    localStorage.setItem(key, JSON.stringify(this.data));\n                    // Reselect the current option\n                    select.value = key;\n                },\n\n                '$store-as': (select, e) => {\n                    // Open the Save As dialog\n                    dialog.showModal();\n                },\n\n                '$delete': (select, e) => {\n                    const key = this.prefix + internals.filename;\n                    // Remove data from localStorage\n                    localStorage.removeItem(key);\n                    // Remove option\n                    select.querySelector('[value=\"' + key + '\"]').remove();\n                    // Select default option\n                    internals.filename = select.value = '';\n                },\n\n                '$save-as': async (select, e) => {\n                    // Use the FileSystem API if available\n                    if (isTopWindow && window.showSaveFilePicker) {\n                        saveAs(internals.filename + '.json', this.data, this.prefix);\n                    }\n                    // Fall back to an automatically clicked download link\n                    else {\n                        downloadAs(internals.filename + '.json', this.data);\n                    }\n                },\n\n                default: (select, e) => {\n                    const json = localStorage.getItem(select.value);\n                    const data = JSON.parse(json);\n\n                    // If that worked update state\n                    internals.filename = select.value.slice(this.prefix.length);\n                    this.data  = data;\n\n                    // Change events do not cross the shadow boundary. Emulate\n                    // a change event when data has actually changed.\n                    trigger('change', this);\n                }\n            })\n        }));\n\n        events('click', shadow).each(delegate({\n            '[name=\"save\"]': (button, e) => {\n                const input = shadow.getElementById('name');\n                const name  = input.value;\n                if (!name) throw new Error('Please give the setting a name');\n\n                // Store\n                const key = this.prefix + name;\n                localStorage.setItem(key, JSON.stringify(this.data));\n                if (!select.querySelector('option[value=\"' + key + '\"]')) {\n                    marker.after(create('option', { value: key, text: name }));\n                }\n\n                // Update state and close dialog\n                select.value = key;\n                internals.filename = name;\n                dialog.close();\n\n                // Emit change event to outer DOM\n                trigger('change', this);\n            },\n\n            '[name=\"close\"]': (button, e) => {\n                dialog.close();\n            }\n        }))\n    },\n\n    connect: function(shadow, internals, data) {\n        const select = shadow.querySelector('select');\n        const marker = shadow.getElementById('marker');\n\n        // Declare render signals\n        internals.renderers = [\n            render(() => {\n                const defaultOption = shadow.getElementById('default-option');\n                defaultOption.textContent = this.title || 'Storage';\n            }),\n\n            render(() => {\n                const prefix = this.prefix;\n                const options = Object.keys(localStorage)\n                    .filter((key) => key.startsWith(prefix))\n                    .map((key) => create('option', { value: key, text: key.slice(prefix.length) }));\n\n                // Remove existing options\n                while (marker.nextElementSibling.matches('option')) marker.nextElementSibling.remove();\n\n                // Insert new options\n                marker.after.apply(marker, options);\n\n                // Select default option and update state\n                internals.filename = select.value = '';\n                this.data  = {};\n\n                // Emit change event\n                trigger('change', this);\n            })\n        ];\n    },\n\n    disconnect: function(shadow, internals) {\n        internals.renderers.forEach(stop);\n    }\n}, {\n    // Declare title property to make it an observable signal\n    title: { type: 'string' },\n    // Reserve the prefix '$' for internal use\n    prefix: { type: 'string', pattern: /^(?!$\\/)/ },\n    // Declare title property to make it an observable signal\n    filename: { type: 'string' },\n    // Data is the parsed data object from storage\n    data:  { value: {}, enumerable: true, writable: true },\n    // Value is the JSON of data, it need not be a signal property\n    value: {\n        attribute: function(json) {\n            this.value = json;\n        },\n\n        get: function() {\n            return JSON.stringify(this.data);\n        },\n\n        set: function(json) {\n            this.data = JSON.parse(json);\n        }\n    }\n}, 'stephen.band/form-elements/file-menu/');\n"],
  "mappings": "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",
  "names": ["cacheByObject", "fn", "map", "object", "value", "A", "applyFn", "fn", "args", "curry", "muteable", "arity", "memo", "cacheByObject", "object", "partial", "curry_default", "get", "key", "object", "get_default", "curry_default", "noop", "overload", "fn", "map", "key", "handler", "id", "value", "assignProperty", "overload", "id", "noop", "name", "node", "object", "content", "setAttribute", "assign", "attributes", "names", "n", "assign_default", "curry_default", "svgNamespace", "template", "typeofContent", "type", "content", "createContextFragment", "context", "html", "range", "createSVG", "overload", "tag", "node", "object", "assign_default", "createHTML", "create", "id", "text", "fragment", "create_default", "delegate", "object", "e", "target", "selector", "node", "isIterable", "object", "arg", "n", "self", "create", "freeze", "nothing_default", "noop", "self", "arg", "id", "to_type_default", "object", "assign", "create", "$listeners", "call", "overload", "to_type_default", "fn", "object", "pipe", "stream", "output", "unpipe", "n", "stop", "listeners", "readable", "value", "Stream", "pipeable", "type", "options", "Broadcast", "nothing_default", "Each", "Filter", "FlatMap", "Map", "accumulator", "Reduce", "initial", "Scan", "m", "Slice", "Split", "listener", "values", "push", "setResolve", "res", "rej", "noop", "input", "isIterable", "result", "chunk", "assign", "rspaces", "types", "cacheByObject", "clickTimeStamp", "listen", "listener", "type", "unlisten", "EventsProducer", "options", "node", "initialEvent", "output", "pipe", "selectedTarget", "stop", "events", "Stream", "assign", "defaults", "trigger", "type", "node", "options", "properties", "detail", "bubbles", "cancelable", "composed", "event", "trigger_default", "curry_default", "exec", "regex", "fn", "string", "data", "tokens", "output", "exec_default", "curry_default", "error", "regex", "reducers", "string", "reduce", "acc", "tokens", "n", "capture", "output", "exec", "capture_default", "curry_default", "assign", "evaluatingSignal", "setDependency", "signal", "dependent", "n", "invalidateDependents", "hasInput", "input", "Signal", "_Signal", "object", "value", "ValueSignal", "fn", "context", "ComputeSignal", "name", "PropertySignal", "initial", "ObserveSignal", "descriptor", "symbol", "assign", "previous", "evaluatingSignal", "#value", "#fn", "#context", "#valid", "promise", "#signal", "#evaluate", "assign", "renderers", "frame", "time", "n", "renderer", "Signal", "hasInput", "signal", "input", "Renderer", "fn", "m", "output", "$internals", "attachInternals", "element", "internals", "create_default", "value", "createInternals", "Element", "shadow", "getInternals", "clamp", "min", "max", "n", "clamp_default", "curry_default", "remove", "array", "value", "remove_default", "curry_default", "assign", "TokenList", "element", "definitions", "string", "n", "token", "remove", "A", "update", "list", "tokens", "removes", "adds", "createBoolean", "name", "symbol", "value", "signal", "Signal", "createNumber", "min", "max", "initial", "clamp_default", "number", "createString", "pattern", "createTokenList", "tokens", "nothing_default", "string", "update", "TokenList", "define", "constructors", "formProperties", "name", "getInternals", "supportsCustomisedBuiltIn", "parseNameTag", "capture_default", "data", "captures", "onceEvent", "toLoadPromise", "element", "resolve", "reject", "getElementConstructor", "tag", "constructors", "constructor", "transferProperty", "element", "key", "value", "createShadow", "elem", "options", "shadow", "link", "create_default", "fillShadowFromTemplate", "template", "createDescriptor", "overload", "name", "createBoolean", "createNumber", "createString", "createTokenList", "fn", "type", "definition", "lifecycle", "properties", "log", "parseNameTag", "attributes", "descriptors", "propname", "descriptor", "Element", "internals", "createInternals", "params", "supportsCustomisedBuiltIn", "links", "style", "promise", "toLoadPromise", "define", "formProperties", "disabled", "getInternals", "old", "n", "attribute", "render", "Renderer", "stylesheet", "isTopWindow", "stop", "object", "downloadAs", "filename", "data", "blob", "url", "a", "saveAs", "id", "writable", "module_default", "element", "shadow", "internals", "select", "dialog", "marker", "events", "delegate", "overload", "get_default", "noop", "e", "key", "json", "trigger_default", "button", "name", "create_default", "render", "defaultOption", "prefix", "options"]
}
