
:host {
    /** --track-height **/
    --track-height: 0.5625rem;

    /** --track-border **/
    --track-border: none;

    /** --track-shadow **/
    --track-shadow:
        inset 0 0.0625rem 0.25rem rgba(0,0,0,0.2),
        inset 0 0 0 1px rgba(0,0,0,0.125);

    --track-top: 1rem;

    /** --handle-width **/
    --handle-width: 1.375rem;

    /** --handle-height **/
    --handle-height: var(--handle-width);

    /** --handle-shadow **/
    --handle-shadow: 0 0.125rem 0.25rem 0.0625rem rgba(0,0,0,0.16);

    /** --bleed **/
    --bleed: 0.1875rem;

    position: relative;
    display: grid;

    grid-template-areas:
        'label output plugs'
        'input input input';
    grid-template-columns: 1fr min-content min-content;
    grid-template-rows:
        min-content
        minmax(1.5rem, min-content);
    grid-row-gap: calc(0.1875rem + var(--label-input-margin));

    padding: 0;
    box-shadow: none;
}

:host(:focus) {
    /*--track-background: #eeeeee;*/
    --track-border: none;
    --track-shadow:
        inset 0 0.0625rem 0.25rem rgba(0,0,0,0.2),
        inset 0 0 0 1px rgba(0,0,0,0.125);
}

:host > label {
    grid-area: label;
    align-self: baseline;
}

:host > output {
    grid-area: output;
    align-self: baseline;
    order: 1;
    margin-left: auto;
    width: auto;
    text-align: right;
}

:host > [type="range"] {
    grid-area: input;
    align-self: end;

    /* Make the range input slightly wider than the control
       to allow range thumb to line up with label text */
    width: calc(100% + 2 * var(--bleed));
    margin-left: calc(-1 * var(--bleed));
    margin-right: calc(-1 * var(--bleed));
    margin-top: var(--track-top);
    z-index: 1;
}

:host > button {
    grid-area: input;
    position: relative;
    z-index: 0;
    align-self: start;

    /* Use margin to centre ticks, not translate, which has the
       effect of blurring the text on pixel screens. */
    margin-left: -0.6875rem;
    width: 1.375rem;
    left: calc((0.5 * var(--handle-width) - var(--bleed)) + var(--normal-value) * (100% + 2 * var(--bleed) - var(--handle-width)));
}

:host > span {
    grid-area: input;
    background-color: yellow;
}

:host > ::slotted([slot="plugs"]) {
    /* Style slotted content. This is overidden by external CSS. */
    grid-area: plugs;
    position: relative;
    margin-left: 9px;
    align-self: end;
    line-height: 15px;
    top: 1px;
}
